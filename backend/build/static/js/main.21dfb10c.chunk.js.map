{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Navabr.js","components/dashboard/TableData.js","components/dashboard/Dashboard.js","Addorder.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","react_default","a","createElement","className","Link","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Addorder","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Fragment","class","PersonList","persons","_this2","get","console","log","map","person","_id","orderName","orderQuantity","orderDate","orderStatus","onClick","location","reload","React","Dashboard","onLogoutClick","Navabr","TableData_PersonList","handleChange","event","handleSubmit","placeholder","jwtToken","currentTime","Date","now","exp","href","App","es","BrowserRouter","layout_Navbar","exact","path","Register","Switch","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21dfb10c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              <i className=\"material-icons\">code</i>\n              Applore Assignment by Harsh \n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Build</b> a login/auth app with {\" \"}\n              <span style={{ fontFamily: \"monospace\" }}> Harsh Sharma</span>       \n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Applore Assignment Using MERN\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n// import { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { registerUser } from \"../../actions/authActions\";\n\n\nclass Addorder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddorder.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Addorder));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\n              home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import './Dashboard.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Navbar=()=>{\n return(\n    <>\n     <div class=\"topnav\">\n                <Link to=\"/addorder\"><a>Add New Order</a></Link>\n                <Link to=\"/dashboard\"><a>All Orders</a></Link>\n            </div>\n    </>\n )\n}\nexport default Navbar;","import React from 'react';\nimport './Dashboard.css';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\n\nexport default class PersonList extends React.Component {\n    state = {\n        persons: []\n    }\n\n    componentDidMount() {\n        axios.get(`/api/users/fetchorders`)\n            .then(res => {\n                const persons = res.data;\n                console.log(persons);\n                this.setState({ persons });\n            })\n    }\n   \n\n  \n\n    render() {\n        return (\n            <>\n                <table>\n                    <tr>\n                        <th>id</th>\n                        <th>orderName</th>\n                        <th>orderQuantity</th>\n                        <th>orderDate</th>\n                        <th>orderStatus</th>\n                        <th>Delete</th>\n\n                    </tr>\n                    <td>\n                        {this.state.persons.map(person => <tr>{person._id}</tr>)}\n\n                    </td>\n                    <td>\n                        {this.state.persons.map(person => <tr>{person.orderName} </tr>)}\n                    </td>\n                    <td>\n                        {this.state.persons.map(person => <tr>{person.orderQuantity}</tr>)}\n                    </td>\n                    <td>\n                        {this.state.persons.map(person => <tr>{person.orderDate}</tr>)}\n                    </td>\n                    <td>\n\n                        {this.state.persons.map(person => <tr>{person.orderStatus}\n                        </tr>)}\n                    </td>\n                    <td>\n                      {this.state.persons.map(person=><tr><button onClick={()=>\n                      {\n                        axios.post(`/api/users/deleteorders`, {id:person._id})\n                        .then(res => {\n                            window.location.reload(false);\n                        \n                        })\n                        \n                      }\n                    \n                    }>Delete</button></tr>)}\n                    </td>\n                </table>\n\n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from '../dashboard/Navabr';\nimport TableData from './TableData';\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <>\n                 <Navbar />\n\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"landing-copy col s12 center-align\">\n            <br></br>\n          <h1> All Orders </h1>\n          <TableData />\n\n            {/* <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a full-stack{\" \"}\n                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\n              </p>\n            </h4> */}\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",  \n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);\n","import './components/dashboard/Dashboard.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/dashboard/Navabr';\n  import axios from 'axios';\n\n\n  \n\nexport default class Addorder extends React.Component {\n  state = {\n    orderName: '',\n    orderQuantity: '',\n    orderDate:'',\n    orderStatus:''\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const user = {\n      orderName: this.state.orderName,\n      orderQuantity: this.state.orderQuantity,\n      orderDate: this.state.orderDate,\n      orderStatus: this.state.orderStatus\n    };\n\n    axios.post(`/api/users/addorder`, { user })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        \n      })\n  }\n  \n  render() {\n    return (\n      <>\n      <Navbar />\n      <div className=\"formaddorder\">\n        <form onSubmit={this.handleSubmit}>\n        <h1> Add New Order </h1>\n\n \n       \n       <input type=\"text\" name=\"orderName\" id=\"orderName\" placeholder=\"orderName\"  onChange={this.handleChange}/>\n       <br></br><br></br>\n       <input type=\"number\" name=\"orderQuantity\" id=\"orderQuantity\" placeholder=\"orderQuantity\"  onChange={this.handleChange}/>\n       <br></br><br></br>\n       <input type=\"date\" name=\"orderDate\" placeholder=\"orderDate\"  id=\"orderDate\" onChange={this.handleChange}/>\n       <br></br><br></br>\n       <input type=\"text\" name=\"orderStatus\" placeholder=\"orderStatus\" id=\"orderStatus\" onChange={this.handleChange}/>\n       <br></br><br></br>\n       {/* <input className=\"submitbutton\" type=\"submit\" value=\"Add Now\" onChange={this.handleChange} /> */}\n   \n               \n   \n             \n          \n          <button className=\"submitbutton\" type=\"submit\" >Add</button> \n          <Link to=\"dashboard\"><button className=\"submitbutton\" type=\"submit\" >All Orders</button></Link>\n\n          <p>Check All Orders page after Clicking the Add Button</p>\n        </form>\n      </div>\n      </>\n    )\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport \"./App.css\";\nimport Addorder from './Addorder';\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/addorder\" component={Addorder} />\n\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}